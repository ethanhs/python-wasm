---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, closed]
  schedule:
    - cron:  '30 2 * * *'
  workflow_dispatch:
    inputs:
      git-ref:
        required: false

jobs:
  pull-buildcontainer:
    name: "Pull & cache build container"
    runs-on: "ubuntu-latest"
    steps:
      - name: "checkout python-wasm"
        uses: "actions/checkout@v2"
      - name: "Common prepare step"
        uses: ./.github/actions/prepare
  build-python:
    name: "Build build Python ${{ matrix.pythonbranch }}"
    runs-on: "ubuntu-latest"
    needs: pull-buildcontainer
    strategy:
      fail-fast: false
      matrix:
        pythonbranch: [main, 3.11]
    steps:
      - name: "checkout python-wasm"
        uses: "actions/checkout@v2"
      - name: "checkout CPython"
        uses: "actions/checkout@v2"
        with:
          repository: python/cpython
          path: cpython
          ref: ${{ matrix.pythonbranch }}
      - name: "Verify checkout"
        shell: bash
        run: |
          test -x build-python-build.sh || exit 1
          test -x cpython/configure || exit 2
      - name: "Common prepare step"
        uses: ./.github/actions/prepare
      - name: "Build build Python"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./build-python-build.sh
      - name: "Cache build Python"
        uses: actions/cache@v2
        with:
          path: cpython
          key: cpython-${{ matrix.pythonbranch }}-${{ runner.os }}-${{ env.TODAY }}-${{ github.sha }}
  emscripte-node:
    name: "Build Emscripten node ${{ matrix.pythonbranch }}"
    runs-on: "ubuntu-latest"
    needs: build-python
    strategy:
      fail-fast: false
      matrix:
        pythonbranch: [main, 3.11]
    steps:
      - name: "checkout python-wasm"
        uses: "actions/checkout@v2"
      - name: "Common prepare step"
        uses: ./.github/actions/prepare
      - name: "Fetch cached build Python"
        uses: actions/cache@v2
        with:
          path: cpython
          key: cpython-${{ matrix.pythonbranch }}-${{ runner.os }}-${{ env.TODAY }}-${{ github.sha }}
      - name: "Check build Python"
        run: |
          test -e cpython/builddir/build/python || exit 1
          test -e cpython/configure || exit 2
      - name: "Build emscripten Python for node"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./build-python-emscripten-node.sh
      - name: "Check artifacts"
        run: |
          ls -la --si cpython/builddir/emscripten-node/python*
          test -e cpython/builddir/emscripten-node/python.wasm || exit 1
      - name: "Print test.pythoninfo"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./run-python-node.sh -m test.pythoninfo
      - name: "Run tests"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./test-emscripten-node.sh -u all -W --slowest --fail-env-changed
      - name: "Upload node build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: emscripten-node-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/emscripten-node/python.wasm
            cpython/builddir/emscripten-node/python.worker.js
            cpython/builddir/emscripten-node/python.js
            cpython/builddir/emscripten-node/pybuilddir.txt
            cpython/builddir/emscripten-node/build/lib.emscripten-wasm32-3.*/_sysconfigdata__emscripten_wasm32-emscripten.py
          if-no-files-found: error
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: build-node-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/emscripten-node/config.log
            cpython/builddir/emscripten-node/config.cache
            cpython/builddir/emscripten-node/Makefile
            cpython/builddir/emscripten-node/pyconfig.h
            cpython/builddir/emscripten-node/libpython*.a
            cpython/builddir/emscripten-node/Modules/Setup.local
            cpython/builddir/emscripten-node/Modules/Setup.stdlib
            cpython/builddir/emscripten-node/Modules/config.c
            cpython/builddir/emscripten-node/Modules/_decimal/libmpdec/libmpdec.a
            cpython/builddir/emscripten-node/Modules/expat/libexpat.a
            cpython/builddir/emscripten-node/Programs/python.o
          if-no-files-found: error
  emscripte-browser:
    name: "Build Emscripten browser ${{ matrix.pythonbranch }}"
    runs-on: "ubuntu-latest"
    needs: build-python
    strategy:
      fail-fast: false
      matrix:
        pythonbranch: [main, 3.11]
    steps:
      - name: "checkout python-wasm"
        uses: "actions/checkout@v2"
      - name: "Common prepare step"
        uses: ./.github/actions/prepare
      - name: "Fetch cached build Python"
        uses: actions/cache@v2
        with:
          path: cpython
          key: cpython-${{ matrix.pythonbranch }}-${{ runner.os }}-${{ env.TODAY }}-${{ github.sha }}
      - name: "Check build Python"
        run: |
          test -e cpython/builddir/build/python || exit 1
          test -e cpython/configure || exit 2
      - name: "Build emscripten Python for browser"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./build-python-emscripten-browser.sh
      - name: "Check artifacts"
        run: |
          ls -la --si cpython/builddir/emscripten-browser/python*
          ls -la cpython/builddir/emscripten-browser/Modules/
          test -e cpython/builddir/emscripten-browser/python.data || exit 1
      - name: "Upload browser build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: emscripten-browser-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/emscripten-browser/python.wasm
            cpython/builddir/emscripten-browser/python.html
            cpython/builddir/emscripten-browser/python.js
            cpython/builddir/emscripten-browser/python.worker.js
            cpython/builddir/emscripten-browser/python.data
          if-no-files-found: error
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: build-browser-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/emscripten-browser/config.log
            cpython/builddir/emscripten-browser/config.cache
            cpython/builddir/emscripten-browser/Makefile
            cpython/builddir/emscripten-browser/pyconfig.h
            cpython/builddir/emscripten-browser/pybuilddir.txt
            cpython/builddir/emscripten-browser/libpython*.a
            cpython/builddir/emscripten-browser/Modules/Setup.local
            cpython/builddir/emscripten-browser/Modules/Setup.stdlib
            cpython/builddir/emscripten-browser/Modules/config.c
            cpython/builddir/emscripten-browser/Modules/_decimal/libmpdec/libmpdec.a
            cpython/builddir/emscripten-browser/Modules/expat/libexpat.a
            cpython/builddir/emscripten-browser/Programs/python.o
          if-no-files-found: error
  wasi:
    name: "Build WASI ${{ matrix.pythonbranch }}"
    runs-on: "ubuntu-latest"
    needs: build-python
    strategy:
      fail-fast: false
      matrix:
        pythonbranch: [main, 3.11]
    steps:
      - name: "checkout python-wasm"
        uses: "actions/checkout@v2"
      - name: "Common prepare step"
        uses: ./.github/actions/prepare
      - name: "Fetch cached build Python"
        uses: actions/cache@v2
        with:
          path: cpython
          key: cpython-${{ matrix.pythonbranch }}-${{ runner.os }}-${{ env.TODAY }}-${{ github.sha }}
      - name: "Check build Python"
        run: |
          test -e cpython/builddir/build/python || exit 1
          test -e cpython/configure || exit 2
      - name: "Build WASI Python"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./build-python-wasi.sh
      - name: "Check artifacts"
        run: |
          ls -la --si cpython/builddir/wasi/python*
          test -e cpython/builddir/wasi/python.wasm || exit 1
      - name: "Print test.pythoninfo"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./run-python-wasi.sh -m test.pythoninfo
      - name: "Run tests"
        run: docker run --rm -v $(pwd):/build -w /build quay.io/tiran/cpythonbuild:emsdk3 ./test-wasi.sh -u all -W --slowest --fail-env-changed
        # some WASI tests are failing
        continue-on-error: true
      - name: "Upload WASI artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: wasi-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/wasi/python.wasm
            cpython/builddir/wasi/pybuilddir.txt
            cpython/builddir/wasi/build/lib.wasi-wasm32-3.*/_sysconfigdata__wasi_wasm32-wasi.py
          if-no-files-found: error
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: build-wasi-${{ matrix.pythonbranch }}
          path: |
            cpython/builddir/wasi/config.log
            cpython/builddir/wasi/config.cache
            cpython/builddir/wasi/Makefile
            cpython/builddir/wasi/pyconfig.h
            cpython/builddir/wasi/libpython*.a
            cpython/builddir/wasi/Modules/Setup.local
            cpython/builddir/wasi/Modules/Setup.stdlib
            cpython/builddir/wasi/Modules/config.c
            cpython/builddir/wasi/Modules/_decimal/libmpdec/libmpdec.a
            cpython/builddir/wasi/Modules/expat/libexpat.a
            cpython/builddir/wasi/Programs/python.o
          if-no-files-found: error
  ghpages:
    name: "Upload to GitHub pages"
    runs-on: "ubuntu-latest"
    needs: emscripte-browser
    # Relies on `on` restricting which branches trigger this job.
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: emscripten-browser-main
          path: wasm
      - name: "Prepare artifacts for Github Pages"
        run: |
          cp -r browser-ui/* wasm/
      - name: Deploy CPython on WASM 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: wasm
